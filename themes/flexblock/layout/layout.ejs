<!DOCTYPE html>
<html lang="<%- config.language %>">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <meta name="theme-color" content="#3367D6" />
  <link rel="apple-touch-icon" href="/icons-192.png">
  <link rel="manifest" href="/manifest.json">
  <link href="https://registry.npmmirror.com/bootstrap/latest/files/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://registry.npmmirror.com/bootstrap/latest/files/dist/js/bootstrap.bundle.min.js"></script>
  <script async src="https://ss.mndsrv.com/static/8616e6cc-9b94-4d1c-8d72-beeecdab2c58.js"></script>
  <script>
    /*!
     * Color mode toggler for Bootstrap's docs (https://getbootstrap.com/)
     * Copyright 2011-2023 The Bootstrap Authors
     * Licensed under the Creative Commons Attribution 3.0 Unported License.
     */

    (() => {
      'use strict'

      const getStoredTheme = () => localStorage.getItem('theme')
      const setStoredTheme = theme => localStorage.setItem('theme', theme)

      const getPreferredTheme = () => {
        const storedTheme = getStoredTheme()
        if (storedTheme) {
          return storedTheme
        }

        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
      }

      const setTheme = theme => {
        if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {
          document.documentElement.setAttribute('data-bs-theme', 'dark')
        } else {
          document.documentElement.setAttribute('data-bs-theme', theme)
        }
      }

      setTheme(getPreferredTheme())

      const showActiveTheme = (theme, focus = false) => {
        const themeSwitcher = document.querySelector('#bd-theme')

        if (!themeSwitcher) {
          return
        }

        const themeSwitcherText = document.querySelector('#bd-theme-text')
        const activeThemeIcon = document.querySelector('.theme-icon-active use')
        const btnToActive = document.querySelector(`[data-bs-theme-value="${theme}"]`)
        const svgOfActiveBtn = btnToActive.querySelector('svg use').getAttribute('href')

        document.querySelectorAll('[data-bs-theme-value]').forEach(element => {
          element.classList.remove('active')
          element.setAttribute('aria-pressed', 'false')
        })

        btnToActive.classList.add('active')
        btnToActive.setAttribute('aria-pressed', 'true')
        activeThemeIcon.setAttribute('href', svgOfActiveBtn)
        const themeSwitcherLabel = `${themeSwitcherText.textContent} (${btnToActive.dataset.bsThemeValue})`
        themeSwitcher.setAttribute('aria-label', themeSwitcherLabel)

        if (focus) {
          themeSwitcher.focus()
        }
      }

      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
        const storedTheme = getStoredTheme()
        if (storedTheme !== 'light' && storedTheme !== 'dark') {
          setTheme(getPreferredTheme())
        }
      })

      window.addEventListener('DOMContentLoaded', () => {
        showActiveTheme(getPreferredTheme())

        document.querySelectorAll('[data-bs-theme-value]')
          .forEach(toggle => {
            toggle.addEventListener('click', () => {
              const theme = toggle.getAttribute('data-bs-theme-value')
              setStoredTheme(theme)
              setTheme(theme)
              showActiveTheme(theme, true)
            })
          })
      })
    })()
  </script>

  <%- meta_generator() %>

  <% if (config.description) { %>
  <meta name="description" content="<%= config.description %>">
  <% } %>

  <% if (config.keywords) { %>
  <meta name="keywords" content="<%= config.keywords %>">
  <% } %>

  <% if (config.author) { %>
  <meta name="author" content="<%= config.author %>">
  <% } %>

  <% if (config.copyright) { %>
  <meta name="copyright" content="<%= config.copyright %>">
  <% } %>

  <%
  var title = page.title;

  if (is_archive()){
    title = __('archive_a');
  } else if (is_category()){
    title = __('category') + ': ' + page.category;
  } else if (is_tag()){
    title = __('tag') + ': ' + page.tag;
  }
  %>

  <title><% if (title){ %><%= title %> | <% } %><%= config.title %></title>

  <% if (theme.rss){ %>
  <link rel="alternate" href="<%= url_for(theme.rss) %>" title="<%= config.title %>" type="application/atom+xml">
  <% } %>

  <% if (theme.favicon){ %>
  <%- favicon_tag(theme.favicon) %>
  <% } %>

  <!--mathjax latex数学公式显示支持-->
  <% if (theme.polyfill.enable) { %>
  <script src="https://registry.npmmirror.com/polyfill/latest/files/index.js"></script>
  <% } %>
  <% if (theme.mathjax.enable && page.mathjax) { %>
  <script id="MathJax-script" async src="https://registry.npmmirror.com/mathjax/3/files/es5/tex-mml-chtml.js"></script>
  <% } %>

  <% if (config.highlight.enable) { %>
  <link rel="stylesheet" href="https://registry.npmmirror.com/typeface-source-code-pro/1.1.13/files/index.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.7.0/build/styles/<%= config.highlight.theme || 'monokai' %>.min.css">
  <% } %>

  <% if (config.prismjs.enable) { %>
  <% if (config.prismjs.preprocess) { %>
  <link rel="stylesheet" href="https://registry.npmmirror.com/prismjs/1.29.0/files/plugins/line-numbers/prism-line-numbers.min.css">
  <% } else { %>
  <script src="https://registry.npmmirror.com/prismjs/1.29.0/files/prism.js"></script>
  <script src="https://registry.npmmirror.com/prismjs/1.29.0/files/plugins/line-numbers/prism-line-numbers.min.js"></script>
  <link rel="stylesheet" href="https://registry.npmmirror.com/prismjs/1.29.0/files/plugins/line-numbers/prism-line-numbers.min.css">
  <% } %>
  <link rel="stylesheet" href="https://registry.npmmirror.com/prismjs/1.29.0/files/themes/prism-tomorrow.min.css">
  <% } %>

  <%- css('css/style') %>
</head>

<body>
  <div class="root-container">
    <%- partial('_partial/header') %>
  </div>
  <%- body %>

  <%- partial('_partial/footer', null, {cache: !config.relative_link}) %>
  </div>

  <div class="back-to-top-fixed soft-size--round soft-style--box">
    <svg class="icon icon-back-to-top" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg">
      <path d="M725.333333 426.666667c-12.8 0-21.333333-4.266667-29.866667-12.8l-213.333333-213.333333c-17.066667-17.066667-17.066667-42.666667 0-59.733333s42.666667-17.066667 59.733333 0l213.333333 213.333333c17.066667 17.066667 17.066667 42.666667 0 59.733333C746.666667 422.4 738.133333 426.666667 725.333333 426.666667z"></path>
      <path d="M298.666667 426.666667c-12.8 0-21.333333-4.266667-29.866667-12.8-17.066667-17.066667-17.066667-42.666667 0-59.733333l213.333333-213.333333c17.066667-17.066667 42.666667-17.066667 59.733333 0s17.066667 42.666667 0 59.733333l-213.333333 213.333333C320 422.4 311.466667 426.666667 298.666667 426.666667z"></path>
      <path d="M512 896c-25.6 0-42.666667-17.066667-42.666667-42.666667L469.333333 170.666667c0-25.6 17.066667-42.666667 42.666667-42.666667s42.666667 17.066667 42.666667 42.666667l0 682.666667C554.666667 878.933333 537.6 896 512 896z"></path>
    </svg>
  </div>

  <%# 加载站点脚本 %>
  <%- partial('_partial/footer-script') %>
  <%# 加载自定义脚本代码 %>
  <%- partial('_partial/footer-other') %>
</body>

</html>